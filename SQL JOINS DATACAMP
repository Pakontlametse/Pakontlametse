
-- Select name fields (with alias) and region 
SELECT cities.name AS city, countries.name AS country , region
FROM cities 
INNER JOIN countries 
ON cities.country_code = countries.code;

-------------------------------------------------------------------------------------------------------------------------------------------------------

-- Select fields with aliases
SELECT c.code AS country_code, name, year, inflation_rate
FROM countries AS c
-- Join to economies (alias e)
INNER JOIN economies AS e 
ON c.code = e.code
-- Match on code field using table aliases
-------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT c1.code, name, basic_unit AS currency
FROM countries AS c1
INNER JOIN currencies AS c2
ON c1.code = c2.code
WHERE c1.continent = 'Oceania';

--------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT code, name
FROM countries
WHERE continent = 'Oceania'
-- Filter for countries not included in the bracketed subquery
  AND code NOT IN
    (SELECT code
    FROM currencies);
---------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT *
FROM populations
WHERE year = 2015
-- Filter for only those populations where life expectancy is 1.15 times higher than average
  AND life_expectancy > 1.15 *
  (SELECT AVG(life_expectancy)
   FROM populations
   WHERE year = 2015);

------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Select relevant fields from cities table
SELECT name, country_code, urbanarea_pop
FROM cities
-- Filter using a subquery on the countries table
WHERE name IN
  (SELECT capital
   FROM countries)
ORDER BY urbanarea_pop DESC;
-----------------------------------------------------------------------------------------------------------------------------------------------------------
-- Find top nine countries with the most cities
SELECT countries.name AS country, COUNT(*) AS cities_num
FROM countries
LEFT JOIN cities
ON countries.code = cities.country_code
GROUP BY country
-- Order by count of cities as cities_num
ORDER BY cities_num DESC, country
LIMIT 9;
--------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT countries.name AS country,
-- Subquery that provides the count of cities   
  (SELECT COUNT(*)
   FROM cities
   WHERE cities.country_code = countries.code) AS cities_num
FROM countries
ORDER BY cities_num DESC, country
LIMIT 9;
